??ft_extract
asda <- fulltext::ft_extract("test/_main (11).pdf")
asda
asd <- taxize::scrapenames(text = asda, all_data_sources = TRUE)
asda[1]
asda$data
asda <- fulltext::ft_extract("test/_main (11).pdf")
asd <- taxize::scrapenames(text = asda$data, all_data_sources = TRUE)
runApp()
asd
asd$data$scientificname
unique(asd$data$scientificname)
runApp()
dictionary.path <- "/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/test"
filenames.dic<-list.files(dictionary.path)
path2 <- paste("/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/dic","/", filenames.dic, sep = "")
path2
dictionary.path <- "/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/dic"
filenames.dic<-list.files(dictionary.path)
path2 <- paste("/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/dic","/", filenames.dic, sep = "")
path2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
path1
runApp()
runApp()
runApp()
runApp()
sciname <- eventReactive(input$dataset,{
# Read the pdf
lst <- fulltext::ft_extract(input$dataset)
# Find scientific names
})
sciname
lst
lst <- fulltext::ft_extract(input$dataset)
runApp()
runApp()
runApp()
runApp()
fulltext::ft_extract(path[1])
fulltext::ft_extract(path[2])
path
fulltext::ft_extract(path1[1])
saea$fulltext::ft_extract(path1[1])
saea <- fulltext::ft_extract(path1[1])
saea
saea$data
runApp()
runApp()
qq <-fulltext::ft_extract(path1[1])
qqq <- taxize::scrapenames(text = qq$data, all_data_sources = TRUE)
qqq
unique(qqq$data$scientificname) # output
qqq$data$scientificname # output
table(qqq$data$scientificname # output )
table(qqq$data$scientificname) # output )
order(table(qqq$data$scientificname), decreasing = T)
table(qqq$data$scientificname)[order(table(qqq$data$scientificname), decreasing = T)]
runApp()
runApp()
qqq
subset(qqq$data, c("verbatim","offsetend", "offsetstart"))
qqq$data[c("verbatim","offsetend", "offsetstart")]
unique(qqq$data[c("verbatim","offsetend", "offsetstart")])
qqq$data[c("verbatim","offsetend", "offsetstart")][unique(qqq$data["verbatim"])]
qqq$data[c("verbatim","offsetend", "offsetstart")][unique(qqq$data["verbatim"]),]
unique(qqq$data["verbatim"])
qqq$data[c("verbatim","offsetend", "offsetstart")][which(unique(qqq$data["verbatim"]))]
qqq$data[c("verbatim","offsetend", "offsetstart")][row.names(unique(qqq$data["verbatim"]))]
qqq$data[c("verbatim","offsetend", "offsetstart")][row.names(unique(qqq$data["verbatim"])),]
qqq$data[c("verbatim","offsetend", "offsetstart")]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
qqq$data[c("verbatim","offsetend", "offsetstart")]
qqq$data[c("verbatim","offsetend", "offsetstart")]$offsetend
runApp()
runApp()
runApp()
v <- qqq$data[c("verbatim","offsetend", "offsetstart")]
stringr::str_sub(qq$data,v$offsetstart[i]-500,v$offsetend[i]+500)
stringr::str_sub(qq$data,v$offsetstart[1]-500,v$offsetend[1]+500)
stringr::str_sub(qq$data,v$offsetstart[2]-500,v$offsetend[2]+500)
r<-c()
for(i in 1:length(v$offsetend)){
r[i] <- stringr::str_sub(qq$data,v$offsetstart[i]-500,v$offsetend[i]+500)
}
r
print(r)
list(r)
Index<- function(read,verbatim) {
IndexText <- c()
for(i in 1:length(verbatim$offsetend)){
IndexText[i] <- stringr::str_sub(read$data,verbatim$offsetstart[i]-500,verbatim$offsetend[i]+500)
}
return(list(IndexText))
}
table(r)
table(r)
r
runApp()
runApp()
runApp()
Index(qq,v)
print(Index(qq,v))
runApp()
runApp()
runApp()
runApp()
runApp()
verbatim$offsetend
r
v
length(v$offsetend)
runApp()
Index(q,v)
Index(qq,v)
runApp()
runApp()
runApp()
Index(qq,v)
unlist(Index(qq,v))
runApp()
runApp()
runApp()
runApp()
Index(qq,v)
unlist(Index(qq,v))
table(unlist(Index(qq,v)))
runApp()
runApp()
Index(qq,v)
v
qq
Index(qq$data,v)
runApp()
Index<- function(read,verbatim) {
IndexText <- c()
for(i in 1:length(verbatim$offsetend)){
IndexText[i] <- ifelse(verbatim$offsetend < 500 ,
stringr::str_sub(read,verbatim$offsetstart[i]-10,verbatim$offsetend[i]+500),
stringr::str_sub(read,verbatim$offsetstart[i]-500,verbatim$offsetend[i]+500))
}
return(unlist(IndexText))
}
Index(qq,v)
Index(qq$data,v)
warnings()
Index<- function(read,verbatim) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[i] <- ifelse(verbatim$offsetend < 500 ,
stringr::str_sub(read,verbatim$offsetstart[i]-10,verbatim$offsetend[i]+500),
stringr::str_sub(read,verbatim$offsetstart[i]-500,verbatim$offsetend[i]+500))
}
return(unlist(IndexText))
}
Index(qq$data,v)
warnings()
IndexText <- list()
Index<- function(read,verbatim) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- ifelse(verbatim$offsetend < 500 ,
stringr::str_sub(read,verbatim$offsetstart[i]-10,verbatim$offsetend[i]+500),
stringr::str_sub(read,verbatim$offsetstart[i]-500,verbatim$offsetend[i]+500))
}
return(unlist(IndexText))
}
Index(qq$data,v)
Index<- function(read,verbatim) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- ifelse(verbatim$offsetend < 500 ,
stringr::str_sub(read,verbatim$offsetstart[i]-10,verbatim$offsetend[i]+500),
stringr::str_sub(read,verbatim$offsetstart[i]-500,verbatim$offsetend[i]+500))
}
return(IndexText)
}
Index(qq$data,v)
stringr::str_sub(qq,v$offsetstart[1]-10,v$offsetend[1]+500)
stringr::str_sub(qq$data,v$offsetstart[1]-10,v$offsetend[1]+500)
stringr::str_sub(qq$data,v$offsetstart[2]-10,v$offsetend[2]+500)
stringr::str_sub(qq$data,v$offsetstart[3]-10,v$offsetend[3]+500)
list <- stringr::str_sub(qq$data,v$offsetstart[3]-10,v$offsetend[3]+500)
list[[1]] <- stringr::str_sub(qq$data,v$offsetstart[3]-10,v$offsetend[3]+500)
list[[2]] <- stringr::str_sub(qq$data,v$offsetstart[3]-10,v$offsetend[3]+500)
list
list[1] <- stringr::str_sub(qq$data,v$offsetstart[3]-10,v$offsetend[3]+500)
list[2] <- stringr::str_sub(qq$data,v$offsetstart[3]-10,v$offsetend[3]+500)
list
runApp()
cat(list)
list[1] <- stringr::str_sub(qq$data,v$offsetstart[1]-10,v$offsetend[2]+500)
list[2] <- stringr::str_sub(qq$data,v$offsetstart[2]-10,v$offsetend[2]+500)
cat(list)
list
runApp()
runApp()
runApp()
runApp()
runApp()
v
v[1,]
v[1,1]
runApp()
table(v)
table(v$verbatim)
runApp()
runApp()
runApp()
runApp()
runApp()
qq <-fulltext::ft_extract(path1[1])
qqq <- taxize::scrapenames(text = qq$data, all_data_sources = TRUE)
qq <-fulltext::ft_extract(path1[1])
path1 <- paste("/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/test","/", filenames, sep = "")
path <- "/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/test"
filenames<-list.files(path)
path1 <- paste("/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/test","/", filenames, sep = "")
dictionary.path <- "/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/dic"
filenames.dic<-list.files(dictionary.path)
path2 <- paste("/Users/Gabriel/Desktop/ShinyAPPS/LiteratureReader/dic","/", filenames.dic, sep = "")
qq <-fulltext::ft_extract(path1[1])
qqq <- taxize::scrapenames(text = qq$data, all_data_sources = TRUE)
v <- qqq$data[c("verbatim","offsetend", "offsetstart")]
Index(qq$data,v)
Index<- function(read,verbatim) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- ifelse(verbatim$offsetend < 500 ,
stringr::str_sub(read,verbatim$offsetstart[i]-10,verbatim$offsetend[i]+500),
stringr::str_sub(read,verbatim$offsetstart[i]-500,verbatim$offsetend[i]+500))
}
return(unlist(IndexText))
}
Index(qq$data,v)
v
IndexText <- list()
Index(qq$data,v)
qq$data
Index<- function(read,verbatim) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[i] <- stringr::str_sub(read,verbatim$offsetstart[i]-500,verbatim$offsetend[i]+500)
}
return(IndexText)
}
Index(qq$data,v)
runApp()
unlist(Index(qq$data,v))
runApp()
runApp()
Index<- function(read,verbatim) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[i] <- stringr::str_sub(read,verbatim$offsetstart[i]-500,verbatim$offsetend[i]+500)
}
return(unlist(IndexText))
}
Index(qq$data, v)
v
runApp()
runApp()
runApp()
runApp()
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(read,verbatim$offsetstart[i]-50,verbatim$offsetend[i]+500)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText$text[IndexText$id == i])
}
return(matches)
}
dict <- read.csv("dic/dictionary.csv", header = T)
Index(qq$data, v, dict)
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(read,verbatim$offsetstart[i]-50,verbatim$offsetend[i]+500)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText$text[IndexText$id == i])
}
return( print(IndexText[which(matches[[i]] == TRUE)]))
}
Index(qq$data, v, dict)
dict
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(read,verbatim$offsetstart[i]-50,verbatim$offsetend[i]+500)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
return( print(IndexText[which(matches[[i]] == TRUE)]))
}
Index(qq$data, v, dict)
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(read,verbatim$offsetstart[i]-50,verbatim$offsetend[i]+500)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term[i], collapse = "|"),IndexText[i])
}
return( print(IndexText[which(matches[[i]] == TRUE)]))
}
Index(qq$data, v, dict)
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(read,verbatim$offsetstart[i]-50,verbatim$offsetend[i]+500)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
return( print(IndexText[which(matches[[i]] == TRUE)]))
}
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(read,verbatim$offsetstart[i]-50,verbatim$offsetend[i]+500)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
return(matches)
}
Index(qq$data, v, dict)
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(read,verbatim$offsetstart[i]-50,verbatim$offsetend[i]+500)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
return(IndexText[[matches==TRUE]])
}
Index(qq$data, v, dict)
matches==TRUE
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(read,verbatim$offsetstart[i]-50,verbatim$offsetend[i]+500)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
return(IndexText[matches==TRUE])
}
matches==TRUE
Index(qq$data, v, dict)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Index(qq$data, v, dict)
HTML(Index(qq$data, v, dict))
?HTML
Index(qq$data, v, dict)
unlist(Index(qq$data, v, dict))
HTML(unlist(Index(qq$data, v, dict)))
runApp()
table(unlist(Index(qq$data, v, dict)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Index(qq$data, v, dict)
rere <- Index(qq$data, v, dict)
str(rere)
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(iconv(enc2utf8(read),sub="byte"),verbatim$offsetstart[i]-50,verbatim$offsetend[i]+250)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
return(IndexText[matches==TRUE])
return(which(matches == TRUE))
}
rere <- Index(qq$data, v, dict)
rere
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(iconv(enc2utf8(read),sub="byte"),verbatim$offsetstart[i]-50,verbatim$offsetend[i]+250)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
print(IndexText[matches==TRUE])
return(which(matches == TRUE))
}
rere <- Index(qq$data, v, dict)
rere
print(rere)
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(iconv(enc2utf8(read),sub="byte"),verbatim$offsetstart[i]-50,verbatim$offsetend[i]+250)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
df$text <- IndexText[matches==TRUE]
df$which <- which(matches == TRUE)
return(df)
}
rere <- Index(qq$data, v, dict)
rere
rere <- Index(qq$data, v, dict)
rere <- Index(qq$data, v, dict)
rere <- Index(qq, v, dict)
Index <- function(read,verbatim, dictionary) {
IndexText <- list()
for(i in 1:length(verbatim$offsetend)){
IndexText[[i]] <- stringr::str_sub(iconv(enc2utf8(read),sub="byte"),verbatim$offsetstart[i]-50,verbatim$offsetend[i]+250)
}
matches <- c()
ToMatch <- c()
for ( i in 1:length(IndexText)){
matches[[i]] <- grepl(paste(dictionary$term, collapse = "|"),IndexText[i])
}
df <- c()
df$text <- IndexText[matches==TRUE]
df$which <- which(matches == TRUE)
return(df)
}
rere <- Index(qq, v, dict)
rere <- Index(qq$data, v, dict)
rere
rere$text
print(rere$which)
rere$text
runApp()
runApp()
nchar(iconv(enc2utf8(qq,sub="byte")))
nchar(iconv(enc2utf8(qq),sub="byte")))
nchar(iconv(enc2utf8(qq),sub="byte"))
qq
nchar(iconv(enc2utf8(qq$data),sub="byte"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
